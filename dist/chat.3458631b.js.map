{"version":3,"sources":["js/chat.js"],"names":["socket","io","connect","message","document","getElementById","handle","sendButton","output","feedback","addEventListener","emit","value","on","data","innerHTML","username","usernameSend","classList","remove"],"mappings":"AAAA;AACA,IAAMA,MAAM,GAAGC,EAAE,CAACC,OAAH,CAAW,uBAAX,CAAf,EAEA;;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,IAAME,UAAU,GAAGH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnB;AACA,IAAMG,MAAM,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,IAAMI,QAAQ,GAAGL,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB,EAEA;;AACAE,UAAU,CAACG,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACzCV,EAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoB;AAClBR,IAAAA,OAAO,EAAEA,OAAO,CAACS;AADC,GAApB;AAGD,CAJD,GAMA;AACA;;AACAZ,MAAM,CAACa,EAAP,CAAU,WAAV,EAAuB,UAACC,IAAD,EAAU;AAC/BN,EAAAA,MAAM,CAACO,SAAP,yBAAkCD,IAAlC;AACD,CAFD,GAIA;;AACAd,MAAM,CAACa,EAAP,CAAU,MAAV,EAAkB,UAACC,IAAD,EAAOE,QAAP,EAAoB;AACpCR,EAAAA,MAAM,CAACO,SAAP,yBAAkCC,QAAlC,wBAAwDF,IAAxD;AACAL,EAAAA,QAAQ,CAACM,SAAT,GAAqB,EAArB;AACD,CAHD,GAKA;;AACAZ,OAAO,CAACO,gBAAR,CAAyB,UAAzB,EAAqC,YAAM;AACzCV,EAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACD,CAFD,GAIA;;AACAX,MAAM,CAACa,EAAP,CAAU,QAAV,EAAoB,UAACC,IAAD,EAAU;AAC5BL,EAAAA,QAAQ,CAACM,SAAT,oBAA+BD,IAA/B;AACD,CAFD,GAIA;;AACAd,MAAM,CAACa,EAAP,CAAU,YAAV,EAAwB,UAACC,IAAD,EAAU;AAChCN,EAAAA,MAAM,CAACO,SAAP,qCAA4CD,IAA5C;AACD,CAFD,GAIA;;AACAd,MAAM,CAACa,EAAP,CAAU,WAAV,EAAuB,UAACC,IAAD,EAAU;AAC/BN,EAAAA,MAAM,CAACO,SAAP,0DAAiED,IAAjE;AACD,CAFD,GAIA;;AACAd,MAAM,CAACa,EAAP,CAAU,UAAV,EAAsB,UAACC,IAAD,EAAU;AAC9BN,EAAAA,MAAM,CAACO,SAAP,wCAA+CD,IAA/C;AACD,CAFD,GAIA;;AACA,IAAME,QAAQ,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACA,IAAMY,YAAY,GAAGb,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB,EAEA;;AACAY,YAAY,CAACP,gBAAb,CAA8B,OAA9B,EAAuC,YAAM;AAC3CN,EAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCa,SAAhC,CAA0CC,MAA1C,CAAiD,QAAjD;AACAnB,EAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B;AACzBK,IAAAA,QAAQ,EAAEA,QAAQ,CAACJ;AADM,GAA3B;AAGD,CALD","file":"chat.3458631b.js","sourceRoot":"../public","sourcesContent":["// Make connection\nconst socket = io.connect('http://localhost:3000')\n\n// Getting elements\nconst message = document.getElementById('message')\nconst handle = document.getElementById('handle')\nconst sendButton = document.getElementById('send')\nconst output = document.getElementById('output')\nconst feedback = document.getElementById('feedback')\n\n// Emit events\nsendButton.addEventListener('click', () => {\n  socket.emit('chat', {\n    message: message.value\n  })\n})\n\n// Listen for events\n// Listening for a connection\nsocket.on('connected', (data) => {\n  output.innerHTML += `<p><strong>${data} </strong>has connected</p>`\n})\n\n// Listening for een chat output\nsocket.on('chat', (data, username) => {\n  output.innerHTML += `<p><strong>${username}: </strong>${data}</p>`\n  feedback.innerHTML = ''\n})\n\n// Emit typing event to server\nmessage.addEventListener('keypress', () => {\n  socket.emit('typing')\n})\n\n// Displaying who's typing\nsocket.on('typing', (data) => {\n  feedback.innerHTML = `<p><em>${data} is nu aan het typen...</em></p>`\n})\n\n// Displaying which user joined the chat\nsocket.on('userJoined', (data) => {\n  output.innerHTML += `<p class=\"connected\">${data} is connected</p>`\n})\n\n// Displaying that you joined the chat\nsocket.on('youJoined', (data) => {\n  output.innerHTML += `<p class=\"connected\">Welcome to the chat, ${data}!</p>`\n})\n\n// Displaying which user left the chat\nsocket.on('userLeft', (data) => {\n  output.innerHTML += `<p class=\"disconnected\">${data} left the chat</p>`\n})\n\n// Setting username\nconst username = document.getElementById('username')\nconst usernameSend = document.getElementById('username-send')\n\n// Emit username to server\nusernameSend.addEventListener('click', () => {\n  document.getElementById('chat').classList.remove('locked')\n  socket.emit('setUsername', {\n    username: username.value\n  })\n})\n"]}