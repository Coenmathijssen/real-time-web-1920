{"version":3,"sources":["js/chat.js"],"names":["socket","io","connect","message","document","getElementById","handle","sendButton","output","feedback","addEventListener","emit","value","on","data","innerHTML","username","usernameSend","classList","remove"],"mappings":";AACA,IAAMA,EAASC,GAAGC,UAGZC,EAAUC,SAASC,eAAe,WAClCC,EAASF,SAASC,eAAe,UACjCE,EAAaH,SAASC,eAAe,QACrCG,EAASJ,SAASC,eAAe,UACjCI,EAAWL,SAASC,eAAe,YAGzCE,EAAWG,iBAAiB,QAAS,WACnCV,EAAOW,KAAK,OAAQ,CAClBR,QAASA,EAAQS,UAMrBZ,EAAOa,GAAG,YAAa,SAACC,GACtBN,EAAOO,WAA2BD,cAAAA,OAAAA,EAAlC,iCAIFd,EAAOa,GAAG,OAAQ,SAACC,EAAME,GACvBR,EAAOO,WAA2BC,cAAAA,OAAAA,EAAsBF,eAAAA,OAAAA,EAAxD,QACAL,EAASM,UAAY,KAIvBZ,EAAQO,iBAAiB,WAAY,WACnCV,EAAOW,KAAK,YAIdX,EAAOa,GAAG,SAAU,SAACC,GACnBL,EAASM,UAAsBD,UAAAA,OAAAA,EAA/B,sCAIFd,EAAOa,GAAG,aAAc,SAACC,GACvBN,EAAOO,WAAqCD,wBAAAA,OAAAA,EAA5C,uBAIFd,EAAOa,GAAG,YAAa,SAACC,GACtBN,EAAOO,WAA0DD,6CAAAA,OAAAA,EAAjE,WAIFd,EAAOa,GAAG,WAAY,SAACC,GACrBN,EAAOO,WAAwCD,2BAAAA,OAAAA,EAA/C,wBAIF,IAAME,EAAWZ,SAASC,eAAe,YACnCY,EAAeb,SAASC,eAAe,iBAG7CY,EAAaP,iBAAiB,QAAS,WACrCN,SAASC,eAAe,QAAQa,UAAUC,OAAO,UACjDnB,EAAOW,KAAK,cAAe,CACzBK,SAAUA,EAASJ","file":"chat.9410d582.js","sourceRoot":"../public","sourcesContent":["// Make connection\nconst socket = io.connect()\n\n// Getting elements\nconst message = document.getElementById('message')\nconst handle = document.getElementById('handle')\nconst sendButton = document.getElementById('send')\nconst output = document.getElementById('output')\nconst feedback = document.getElementById('feedback')\n\n// Emit events\nsendButton.addEventListener('click', () => {\n  socket.emit('chat', {\n    message: message.value\n  })\n})\n\n// Listen for events\n// Listening for a connection\nsocket.on('connected', (data) => {\n  output.innerHTML += `<p><strong>${data} </strong>has connected</p>`\n})\n\n// Listening for een chat output\nsocket.on('chat', (data, username) => {\n  output.innerHTML += `<p><strong>${username}: </strong>${data}</p>`\n  feedback.innerHTML = ''\n})\n\n// Emit typing event to server\nmessage.addEventListener('keypress', () => {\n  socket.emit('typing')\n})\n\n// Displaying who's typing\nsocket.on('typing', (data) => {\n  feedback.innerHTML = `<p><em>${data} is nu aan het typen...</em></p>`\n})\n\n// Displaying which user joined the chat\nsocket.on('userJoined', (data) => {\n  output.innerHTML += `<p class=\"connected\">${data} is connected</p>`\n})\n\n// Displaying that you joined the chat\nsocket.on('youJoined', (data) => {\n  output.innerHTML += `<p class=\"connected\">Welcome to the chat, ${data}!</p>`\n})\n\n// Displaying which user left the chat\nsocket.on('userLeft', (data) => {\n  output.innerHTML += `<p class=\"disconnected\">${data} left the chat</p>`\n})\n\n// Setting username\nconst username = document.getElementById('username')\nconst usernameSend = document.getElementById('username-send')\n\n// Emit username to server\nusernameSend.addEventListener('click', () => {\n  document.getElementById('chat').classList.remove('locked')\n  socket.emit('setUsername', {\n    username: username.value\n  })\n})\n"]}